name: CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  PYTHONPATH: ${{ github.workspace }}

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.13"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8 (if available)
      continue-on-error: true
      run: |
        pip install flake8 || true
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics || true
        # Exit-zero treats all errors as warnings
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics || true
    
    - name: Run tests
      run: |
        python -m pytest tests/ -v --tb=short
    
    - name: Generate coverage report
      if: matrix.python-version == '3.13'
      run: |
        python -m pytest tests/ \
          --cov=src \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          -v
    
    - name: Upload coverage reports to Codecov
      if: matrix.python-version == '3.13'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
    
    - name: Upload coverage HTML report as artifact
      if: matrix.python-version == '3.13'
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: htmlcov/
    
    - name: Test game can be imported and initialized
      run: |
        python -c "
        import sys, os
        sys.path.insert(0, os.path.join(os.getcwd(), 'src'))
        from game import GameBoard, GameState, CellState
        from ui import MinesweeperGUI
        board = GameBoard()
        print(f'✅ Game board created: {board.rows}x{board.cols} with {board.total_mines} mines')
        print(f'✅ Game state: {board.game_state}')
        print('✅ All imports successful!')
        "

  build-check:
    name: Build Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Check if main.py runs without GUI
      run: |
        # Test that the main module can be imported
        python -c "
        import sys, os
        sys.path.insert(0, os.path.join(os.getcwd(), 'src'))
        import main
        print('✅ Main module imports successfully')
        "
